# Default values for grupo118fase4
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: your-acr-name.azurecr.io
  imageName: your-api-name
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets:
  - name: acr-secret

nameOverride: ""
fullnameOverride: ""

# ACR Credentials for pulling images
acrCredentials:
  enabled: true
  registry: your-acr-name.azurecr.io
  username: ""
  password: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Service configuration
service:
  instances:
    - name: grupo118fase4-service
      type: ClusterIP
      port: 80
      targetPort: 8080
      protocol: TCP
      labels: {}
      annotations: {}

# Internal Ingress configuration for API Gateway
internalIngress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # Add any other annotations needed for your internal ingress
  hosts:
    - host: api-internal.local
      paths:
        - path: /
          pathType: Prefix
          serviceName: grupo118fase4-service
          servicePort: 80

# Generic Secret configuration
secret:
  enabled: false
  name: ""  # If empty, uses the release fullname
  envVars: []
    # Example:
    # - name: DATABASE_PASSWORD
    #   secretKey: db-password
    # - name: API_KEY
    #   secretKey: api-key
  data: {}
    # Example:
    # db-password: "your-base64-encoded-password"
    # api-key: "your-base64-encoded-api-key"

# Generic ConfigMap configuration
configMap:
  enabled: false
  name: ""  # If empty, uses the release fullname
  envVars: []
    # Example:
    # - name: DATABASE_HOST
    #   configMapKey: db-host
    # - name: DATABASE_PORT
    #   configMapKey: db-port
  data: {}
    # Example:
    # db-host: "localhost"
    # db-port: "5432"

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health/ready
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# HPA configuration
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
